# microservice specific routes

->         /hmrc-frontend                               hmrcfrontend.Routes

->         /error                                       error.Routes

GET        /refresh-session                             controllers.KeepAliveController.keepAlive()

GET        /assets/*file                                controllers.Assets.versioned(path = "/public", file: Asset)

GET        /account/sign-out                            controllers.auth.AuthController.signOut(becauseOfTimeout: Boolean ?= false)
GET        /account/timeout                             controllers.TimeoutController.onPageLoad()

GET        /trader/:ern/movement/:arc/not-permitted                     controllers.NotPermittedPageController.onPageLoad(ern, arc)

GET        /trader/:ern/movement/:arc                                   controllers.IndexController.onPageLoad(ern: String, arc: String)

GET        /trader/:ern/movement/:arc/no-information-delay              controllers.JourneyRecoveryController.onPageLoad(ern: String, arc: String)

GET        /trader/:ern/movement/:arc/delay-type                        controllers.DelayTypeController.onPageLoad(ern: String, arc: String, mode: Mode = NormalMode)
POST       /trader/:ern/movement/:arc/delay-type                        controllers.DelayTypeController.onSubmit(ern: String, arc: String, mode: Mode = NormalMode)
GET        /trader/:ern/movement/:arc/delay-type/change                 controllers.DelayTypeController.onPageLoad(ern: String, arc: String, mode: Mode = CheckMode)
POST       /trader/:ern/movement/:arc/delay-type/change                 controllers.DelayTypeController.onSubmit(ern: String, arc: String, mode: Mode = CheckMode)

GET        /trader/:ern/movement/:arc/delay-reason                      controllers.DelayReasonController.onPageLoad(ern: String, arc: String, mode: Mode = NormalMode)
POST       /trader/:ern/movement/:arc/delay-reason                      controllers.DelayReasonController.onSubmit(ern: String, arc: String, mode: Mode = NormalMode)
GET        /trader/:ern/movement/:arc/delay-reason/change               controllers.DelayReasonController.onPageLoad(ern: String, arc: String, mode: Mode = CheckMode)
POST       /trader/:ern/movement/:arc/delay-reason/change               controllers.DelayReasonController.onSubmit(ern: String, arc: String, mode: Mode = CheckMode)

GET        /trader/:ern/movement/:arc/delay-details-choice              controllers.DelayDetailsChoiceController.onPageLoad(ern: String, arc: String, mode: Mode = NormalMode)
POST       /trader/:ern/movement/:arc/delay-details-choice              controllers.DelayDetailsChoiceController.onSubmit(ern: String, arc: String, mode: Mode = NormalMode)
GET        /trader/:ern/movement/:arc/delay-details-choice/change       controllers.DelayDetailsChoiceController.onPageLoad(ern: String, arc: String, mode: Mode = CheckMode)
POST       /trader/:ern/movement/:arc/delay-details-choice/change       controllers.DelayDetailsChoiceController.onSubmit(ern: String, arc: String, mode: Mode = CheckMode)

GET        /trader/:ern/movement/:arc/delay-details                     controllers.DelayDetailsController.onPageLoad(ern: String, arc: String, mode: Mode = NormalMode)
POST       /trader/:ern/movement/:arc/delay-details                     controllers.DelayDetailsController.onSubmit(ern: String, arc: String, mode: Mode = NormalMode)
GET        /trader/:ern/movement/:arc/delay-details/change              controllers.DelayDetailsController.onPageLoad(ern: String, arc: String, mode: Mode = CheckMode)
POST       /trader/:ern/movement/:arc/delay-details/change              controllers.DelayDetailsController.onSubmit(ern: String, arc: String, mode: Mode = CheckMode)

GET        /trader/:ern/movement/:arc/check-answers                     controllers.CheckYourAnswersController.onPageLoad(ern: String, arc: String)
POST       /trader/:ern/movement/:arc/check-answers                     controllers.CheckYourAnswersController.onSubmit(ern: String, arc: String)

GET        /trader/:ern/movement/:arc/confirmation                      controllers.ConfirmationController.onPageLoad(ern: String, arc: String)
